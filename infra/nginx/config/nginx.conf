events {
    worker_connections 1024;
}

http {
    upstream frontend {
        server localhost:8080;
    }

    upstream backend {
        server localhost:8081;
    }

    upstream ollama {
        server conversafina-ollama.ddnsfree.com:11434;
    }

    server {
        listen 80;
        server_name conversafina.ddnsfree.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name conversafina.ddnsfree.com;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection 'upgrade';
            # proxy_cache_bypass $http_upgrade;
            # proxy_method $request_method;
        }

        location /backend {
            rewrite ^/backend/(.*)$ /$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection 'upgrade';
            # proxy_cache_bypass $http_upgrade;
            # proxy_method $request_method;
        }

        location /ollama {
            rewrite ^/ollama/(.*)$ /$1 break;
            proxy_pass http://ollama;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection 'upgrade';
            # proxy_cache_bypass $http_upgrade;
            # proxy_method $request_method;
        }
    }
    error_log /var/log/nginx/error.log debug;
}